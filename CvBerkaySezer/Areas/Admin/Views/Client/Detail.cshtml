@using CvBerkaySezer.Areas.Admin.ViewModels
@model ClientViewModel
@{
    ViewBag.Title = "Detail";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">Müşteri Detay</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Admin</a></li>
                    <li class="breadcrumb-item active">Müşteri Detay</li>
                </ol>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">@Model.Client.FullName</h3>
                    </div>
                    <div class="card-body">
                        <strong><i class="fas fa-book mr-1"></i> Telefon Numarası</strong>
                        <p class="text-muted">
                            @Model.Client.Telephone
                        </p>
                        <hr>
                        <strong><i class="fas fa-map-marker-alt mr-1"></i> E-posta</strong>
                        <p class="text-muted">@Model.Client.Email</p>
                        <hr>
                        <strong><i class="fas fa-pencil-alt mr-1"></i> Hosting Hizmeti</strong>
                        <p class="text-muted">
                            @ViewBag.HostingCount
                        </p>
                        <hr>
                        <strong><i class="far fa-file-alt mr-1"></i> Domain Hizmeti</strong>
                        <p class="text-muted">@ViewBag.DomainCount</p>
                    </div>
                </div>
            </div>
            <div class="col-md-9">
                <div class="card">
                    <div class="card-header">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <a href="/Admin/Client/AddHosting/@Model.Client.Id" class="btn btn-primary btn-sm"><i class="fa-solid fa-plus"></i> Hosting Ekle</a>
                                    </div>

                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="card-body">
                        <table id="tblClientHostings" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>Başlık</th>
                                    <th>Açıklama</th>
                                    <th>Servis Sağlayıcısı</th>
                                    <th>Kayıt Tarihi</th>
                                    <th>Sıradaki Ödeme Tarihi</th>
                                    <th>Tutar</th>
                                    <th>Durum</th>
                                    <th>İşlemler</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var hosting in Model.Hostings)
                                {
                                    <tr>
                                        <td>@hosting.Title</td>
                                        <td>@(hosting.Description.Length > 50 ? hosting.Description.Substring(0,47) + "..." : hosting.Description)</td>
                                        <td><a href="@hosting.ServiceProvider.Url" target="_blank">@hosting.ServiceProvider.Name</a></td>
                                        <td>@hosting.RegistrationDate.ToString("dd.MM.yyyy")</td>
                                        <td>@hosting.NextPaymentDate.ToString("dd.MM.yyyy")</td>
                                        <td>@string.Format("{0:c}", hosting.Amount)</td>
                                        <td>
                                            @if (!hosting.IsActive)
                                            {
                                                <span class="badge badge-danger">Aktif Değil</span>
                                            }
                                            else
                                            {
                                                <span class="badge badge-success">Aktif</span>
                                            }
                                        </td>
                                        <td>
                                            <a href="#" class="btn btn-outline-primary btn-sm"><i class="fa-solid fa-folder-plus"></i></a>
                                            <a href="/Admin/Client/EditHosting/@hosting.Id" class="btn btn-outline-primary btn-sm m-1"><i class="fa-solid fa-pen-to-square"></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card">
                    <div class="card-header">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <a href="/Admin/Client/AddDomain/@Model.Client.Id" class="btn btn-primary btn-sm"><i class="fa-solid fa-plus"></i> Domain Ekle</a>
                                    </div>

                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="card-body">
                        <table id="tblClientDomains" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>Başlık</th>
                                    <th>Açıklama</th>
                                    <th>Servis Sağlayıcısı</th>
                                    <th>Alan Adı</th>
                                    <th>Kayıt Tarihi</th>
                                    <th>Sıradaki Ödeme Tarihi</th>
                                    <th>Tutar</th>
                                    <th>Durum</th>
                                    <th>İşlemler</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var domain in Model.Domains)
                                {
                                    <tr>
                                        <td>@domain.Title</td>
                                        <td>@(domain.Description.Length > 50 ? domain.Description.Substring(0,47) + "..." : domain.Description)</td>
                                        <td><a href="@domain.ServiceProvider.Url" target="_blank">@domain.ServiceProvider.Name</a></td>
                                        <td>@domain.DomainName</td>
                                        <td>@domain.RegistrationDate.ToString("dd.MM.yyyy")</td>
                                        <td>@domain.NextPaymentDate.ToString("dd.MM.yyyy")</td>
                                        <td>@string.Format("{0:c}", domain.Amount)</td>
                                        <td>
                                            @if (!domain.IsActive)
                                            {
                                                <span class="badge badge-danger">Aktif Değil</span>
                                            }
                                            else
                                            {
                                                <span class="badge badge-success">Aktif</span>
                                            }
                                        </td>
                                        <td>
                                            <a href="#" class="btn btn-outline-primary btn-sm"><i class="fa-solid fa-folder-plus"></i></a>
                                            <a href="/Admin/Client/EditDomain/@domain.Id" class="btn btn-outline-primary btn-sm m-1"><i class="fa-solid fa-pen-to-square"></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script src="~/Areas/Admin/Content/plugins/jquery/jquery.min.js"></script>
<script>
    $(function () {
        $("#tblClientHostings").DataTable({
            order: [[0, 'asc']],
            "paging": true,
            "lengthChange": false,
            "searching": false,
            "ordering": true,
            "info": true,
            "autoWidth": false,
            "responsive": true,
            "language": {
                "url": "//cdn.datatables.net/plug-ins/1.10.12/i18n/Turkish.json"
            }
        });

    });</script>

<script>
    $(function () {
        $("#tblClientDomains").DataTable({
            order: [[0, 'asc']],
            "paging": true,
            "lengthChange": false,
            "searching": false,
            "ordering": true,
            "info": true,
            "autoWidth": false,
            "responsive": true,
            "language": {
                "url": "//cdn.datatables.net/plug-ins/1.10.12/i18n/Turkish.json"
            }
        });

    });</script>


@if (TempData["HostingMessage"] != null)
{
    <script>
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            })

            Toast.fire({
                icon: '@TempData["HostingType"]',
                title: '@TempData["HostingMessage"]'
            })
    </script>
}


@if (TempData["DomainMessage"] != null)
{
    <script>
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            })

            Toast.fire({
                icon: '@TempData["DomainType"]',
                title: '@TempData["DomainMessage"]'
            })
    </script>
}